{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/bytedance/Desktop/agent-example/examples/06-context-memory/app/api/chat/route.ts"],"sourcesContent":["import { streamText } from 'ai';\nimport { createDeepSeek } from '@ai-sdk/deepseek';\n\n// 允许流式响应最长30秒\nexport const maxDuration = 30;\n\nexport async function POST(req: Request) {\n  try {\n    const { messages } = await req.json();\n\n    // 检查 DeepSeek API key\n    if (!process.env.DEEPSEEK_API_KEY) {\n      return new Response(\n        JSON.stringify({ \n          error: 'DeepSeek API key 未配置。请在 .env.local 文件中设置 DEEPSEEK_API_KEY' \n        }),\n        { status: 500 }\n      );\n    }\n\n    // 创建 DeepSeek provider 实例\n    const deepseek = createDeepSeek({\n      apiKey: process.env.DEEPSEEK_API_KEY,\n    });\n\n    // 构建系统提示词，增强上下文理解能力\n    const systemPrompt = `你是一个智能待办事项助手，具有上下文记忆能力。你的主要任务是：\n\n1. **理解用户的自然语言指令**，包括上下文引用\n2. **解析上下文信息**，正确理解\"刚才那个\"、\"最后一个\"、\"再加一个\"等引用\n3. **生成结构化的操作指令**，在回复中包含JSON格式的指令\n\n## 支持的操作类型：\n- \\`add\\`: 添加新任务\n- \\`complete\\`: 完成任务\n- \\`delete\\`: 删除任务\n- \\`list\\`: 列出所有任务\n- \\`clear_completed\\`: 清除已完成任务\n- \\`clear_all\\`: 清除所有任务\n\n## 上下文引用处理：\n- \"刚才那个/最后一个任务\": 引用最近添加的任务\n- \"再加一个/再添加\": 基于上次添加的任务类型\n- \"完成刚才的\": 完成最近添加的任务\n- \"删除最后添加的\": 删除最近添加的任务\n\n## 响应格式：\n每次回复都应该包含：\n1. 友好的自然语言回复\n2. 结构化的JSON指令（如果需要执行操作）\n\nJSON指令格式：\n\\`\\`\\`json\n{\n  \"action\": \"操作类型\",\n  \"task\": \"任务内容或标识符\",\n  \"response\": \"给用户的回复\"\n}\n\\`\\`\\`\n\n## 示例对话：\n\n用户：\"帮我添加一个学习Python的任务\"\n助手：好的，我来帮你添加一个学习Python的任务！\n\\`\\`\\`json\n{\n  \"action\": \"add\",\n  \"task\": \"学习Python\",\n  \"response\": \"已添加任务：学习Python\"\n}\n\\`\\`\\`\n\n用户：\"再加一个类似的任务\"\n助手：我来为你添加另一个学习相关的任务！\n\\`\\`\\`json\n{\n  \"action\": \"add\", \n  \"task\": \"学习JavaScript\",\n  \"response\": \"已添加类似任务：学习JavaScript\"\n}\n\\`\\`\\`\n\n用户：\"完成刚才那个任务\"\n助手：好的，我来完成最近添加的任务！\n\\`\\`\\`json\n{\n  \"action\": \"complete\",\n  \"task\": \"学习JavaScript\",\n  \"response\": \"已完成任务：学习JavaScript\"\n}\n\\`\\`\\`\n\n## 重要提醒：\n- 仔细分析用户消息中的上下文信息\n- 如果有\"引用的任务ID\"等额外信息，优先使用ID进行操作\n- 对于模糊的引用，要基于历史上下文做出合理判断\n- 始终保持友好和准确的回复`;\n\n    const result = await streamText({\n      model: deepseek('deepseek-chat'),\n      system: systemPrompt,\n      messages,\n      maxTokens: 1000,\n      temperature: 0.7,\n    });\n\n    return result.toDataStreamResponse();\n  } catch (error) {\n    console.error('API 错误:', error);\n    return new Response(\n      JSON.stringify({ \n        error: '服务暂时不可用，请稍后重试',\n        details: error instanceof Error ? error.message : '未知错误'\n      }),\n      {\n        status: 500,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n  }\n} "],"names":[],"mappings":";;;;AAAA;AACA;;;AAGO,MAAM,cAAc;AAEpB,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;QAEnC,sBAAsB;QACtB,IAAI,CAAC,QAAQ,GAAG,CAAC,gBAAgB,EAAE;YACjC,OAAO,IAAI,SACT,KAAK,SAAS,CAAC;gBACb,OAAO;YACT,IACA;gBAAE,QAAQ;YAAI;QAElB;QAEA,0BAA0B;QAC1B,MAAM,WAAW,CAAA,GAAA,2JAAA,CAAA,iBAAc,AAAD,EAAE;YAC9B,QAAQ,QAAQ,GAAG,CAAC,gBAAgB;QACtC;QAEA,oBAAoB;QACpB,MAAM,eAAe,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cAsEZ,CAAC;QAEX,MAAM,SAAS,MAAM,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAD,EAAE;YAC9B,OAAO,SAAS;YAChB,QAAQ;YACR;YACA,WAAW;YACX,aAAa;QACf;QAEA,OAAO,OAAO,oBAAoB;IACpC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,WAAW;QACzB,OAAO,IAAI,SACT,KAAK,SAAS,CAAC;YACb,OAAO;YACP,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QACpD,IACA;YACE,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;QACF;IAEJ;AACF","debugId":null}}]
}