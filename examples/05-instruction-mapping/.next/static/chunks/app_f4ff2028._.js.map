{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/bytedance/Desktop/agent-example/examples/05-instruction-mapping/app/utils/jsonParser.ts"],"sourcesContent":["// 定义操作类型\nexport interface TodoAction {\n  action: 'add' | 'complete' | 'delete' | 'list' | 'clear_completed' | 'clear_all';\n  task?: string;\n}\n\n// 安全解析JSON的函数\nexport function safeParseJSON(text: string): TodoAction | null {\n  try {\n    // 使用正则表达式提取JSON部分\n    const jsonMatch = text.match(/\\{[^}]*\\}/);\n    if (!jsonMatch) {\n      return null;\n    }\n\n    const jsonString = jsonMatch[0];\n    const parsed = JSON.parse(jsonString);\n    \n    // 验证解析结果的结构\n    if (typeof parsed === 'object' && \n        parsed !== null && \n        'action' in parsed &&\n        ['add', 'complete', 'delete', 'list', 'clear_completed', 'clear_all'].includes(parsed.action)) {\n      \n      // 对于需要task的操作，验证task字段\n      if ((parsed.action === 'add' || parsed.action === 'complete' || parsed.action === 'delete') && \n          (!parsed.task || typeof parsed.task !== 'string' || parsed.task.trim() === '')) {\n        return null;\n      }\n      \n      return {\n        action: parsed.action,\n        task: parsed.task?.trim()\n      };\n    }\n    \n    return null;\n  } catch (error) {\n    console.warn('JSON解析失败:', error);\n    return null;\n  }\n}\n\n// 检查消息是否包含JSON操作\nexport function hasActionInMessage(message: string): boolean {\n  return /\\{[^}]*\"action\"[^}]*\\}/.test(message);\n} "],"names":[],"mappings":"AAAA,SAAS;;;;;AAOF,SAAS,cAAc,IAAY;IACxC,IAAI;QACF,kBAAkB;QAClB,MAAM,YAAY,KAAK,KAAK,CAAC;QAC7B,IAAI,CAAC,WAAW;YACd,OAAO;QACT;QAEA,MAAM,aAAa,SAAS,CAAC,EAAE;QAC/B,MAAM,SAAS,KAAK,KAAK,CAAC;QAE1B,YAAY;QACZ,IAAI,OAAO,WAAW,YAClB,WAAW,QACX,YAAY,UACZ;YAAC;YAAO;YAAY;YAAU;YAAQ;YAAmB;SAAY,CAAC,QAAQ,CAAC,OAAO,MAAM,GAAG;YAEjG,uBAAuB;YACvB,IAAI,CAAC,OAAO,MAAM,KAAK,SAAS,OAAO,MAAM,KAAK,cAAc,OAAO,MAAM,KAAK,QAAQ,KACtF,CAAC,CAAC,OAAO,IAAI,IAAI,OAAO,OAAO,IAAI,KAAK,YAAY,OAAO,IAAI,CAAC,IAAI,OAAO,EAAE,GAAG;gBAClF,OAAO;YACT;YAEA,OAAO;gBACL,QAAQ,OAAO,MAAM;gBACrB,MAAM,OAAO,IAAI,EAAE;YACrB;QACF;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,IAAI,CAAC,aAAa;QAC1B,OAAO;IACT;AACF;AAGO,SAAS,mBAAmB,OAAe;IAChD,OAAO,yBAAyB,IAAI,CAAC;AACvC","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///Users/bytedance/Desktop/agent-example/examples/05-instruction-mapping/app/hooks/useInstructionExecutor.ts"],"sourcesContent":["import { useCallback } from 'react';\nimport { Instruction, ExecutionResult } from '../utils/instructionMapper';\nimport { TodoAction, safeParseJSON, hasActionInMessage } from '../utils/jsonParser';\n\ninterface UseInstructionExecutorProps {\n  executeInstruction: (instruction: Instruction) => ExecutionResult;\n}\n\nexport function useInstructionExecutor({ executeInstruction }: UseInstructionExecutorProps) {\n  \n  // 解析AI响应并执行指令\n  const parseAndExecuteMessage = useCallback((aiMessage: string): ExecutionResult | null => {\n    // 检查消息是否包含指令\n    if (!hasActionInMessage(aiMessage)) {\n      return null;\n    }\n\n    // 解析JSON指令\n    const parsedAction: TodoAction | null = safeParseJSON(aiMessage);\n    \n    if (!parsedAction) {\n      console.warn('无法解析AI返回的指令');\n      return {\n        success: false,\n        message: '指令格式错误，无法解析'\n      };\n    }\n\n    // 将TodoAction转换为Instruction格式\n    const instruction: Instruction = {\n      action: parsedAction.action,\n      task: parsedAction.task\n    };\n\n    // 执行指令\n    console.log('执行AI指令:', instruction);\n    const result = executeInstruction(instruction);\n    \n    return result;\n  }, [executeInstruction]);\n\n  // 批量处理AI消息中的指令\n  const processAIResponse = useCallback((aiMessage: string): ExecutionResult[] => {\n    const results: ExecutionResult[] = [];\n    \n    // 查找所有JSON指令\n    const jsonMatches = aiMessage.match(/\\{[^}]*\"action\"[^}]*\\}/g);\n    \n    if (jsonMatches) {\n      jsonMatches.forEach((jsonStr, index) => {\n        try {\n          const parsed = JSON.parse(jsonStr);\n          if (parsed.action && ['add', 'complete', 'delete', 'list', 'clear_completed', 'clear_all'].includes(parsed.action)) {\n            const instruction: Instruction = {\n              action: parsed.action,\n              task: parsed.task\n            };\n            \n            const result = executeInstruction(instruction);\n            results.push(result);\n            \n            console.log(`执行第${index + 1}个指令:`, instruction, '结果:', result);\n          }\n        } catch (error) {\n          console.warn('解析指令失败:', jsonStr, error);\n          results.push({\n            success: false,\n            message: `指令${index + 1}解析失败`\n          });\n        }\n      });\n    }\n    \n    return results;\n  }, [executeInstruction]);\n\n  return {\n    parseAndExecuteMessage,\n    processAIResponse\n  };\n} "],"names":[],"mappings":";;;AAAA;AAEA;;;;AAMO,SAAS,uBAAuB,EAAE,kBAAkB,EAA+B;;IAExF,cAAc;IACd,MAAM,yBAAyB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;sEAAE,CAAC;YAC1C,aAAa;YACb,IAAI,CAAC,CAAA,GAAA,6HAAA,CAAA,qBAAkB,AAAD,EAAE,YAAY;gBAClC,OAAO;YACT;YAEA,WAAW;YACX,MAAM,eAAkC,CAAA,GAAA,6HAAA,CAAA,gBAAa,AAAD,EAAE;YAEtD,IAAI,CAAC,cAAc;gBACjB,QAAQ,IAAI,CAAC;gBACb,OAAO;oBACL,SAAS;oBACT,SAAS;gBACX;YACF;YAEA,8BAA8B;YAC9B,MAAM,cAA2B;gBAC/B,QAAQ,aAAa,MAAM;gBAC3B,MAAM,aAAa,IAAI;YACzB;YAEA,OAAO;YACP,QAAQ,GAAG,CAAC,WAAW;YACvB,MAAM,SAAS,mBAAmB;YAElC,OAAO;QACT;qEAAG;QAAC;KAAmB;IAEvB,eAAe;IACf,MAAM,oBAAoB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;iEAAE,CAAC;YACrC,MAAM,UAA6B,EAAE;YAErC,aAAa;YACb,MAAM,cAAc,UAAU,KAAK,CAAC;YAEpC,IAAI,aAAa;gBACf,YAAY,OAAO;6EAAC,CAAC,SAAS;wBAC5B,IAAI;4BACF,MAAM,SAAS,KAAK,KAAK,CAAC;4BAC1B,IAAI,OAAO,MAAM,IAAI;gCAAC;gCAAO;gCAAY;gCAAU;gCAAQ;gCAAmB;6BAAY,CAAC,QAAQ,CAAC,OAAO,MAAM,GAAG;gCAClH,MAAM,cAA2B;oCAC/B,QAAQ,OAAO,MAAM;oCACrB,MAAM,OAAO,IAAI;gCACnB;gCAEA,MAAM,SAAS,mBAAmB;gCAClC,QAAQ,IAAI,CAAC;gCAEb,QAAQ,GAAG,CAAC,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,EAAE,aAAa,OAAO;4BACzD;wBACF,EAAE,OAAO,OAAO;4BACd,QAAQ,IAAI,CAAC,WAAW,SAAS;4BACjC,QAAQ,IAAI,CAAC;gCACX,SAAS;gCACT,SAAS,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC;4BAC/B;wBACF;oBACF;;YACF;YAEA,OAAO;QACT;gEAAG;QAAC;KAAmB;IAEvB,OAAO;QACL;QACA;IACF;AACF;GAxEgB","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///Users/bytedance/Desktop/agent-example/examples/05-instruction-mapping/app/components/ChatSidebar.tsx"],"sourcesContent":["'use client';\n\nimport { useRef, useEffect, useState } from 'react';\nimport { useChat } from '@ai-sdk/react';\nimport { Instruction, ExecutionResult } from '../utils/instructionMapper';\nimport { useInstructionExecutor } from '../hooks/useInstructionExecutor';\n\n// 定义组件props\ninterface ChatSidebarProps {\n  executeInstruction?: (instruction: Instruction) => ExecutionResult;\n  onInstructionExecuted?: (result: { success: boolean; message?: string }) => void;\n}\n\nexport default function ChatSidebar({ executeInstruction, onInstructionExecuted }: ChatSidebarProps) {\n  const [executionResults, setExecutionResults] = useState<string[]>([]);\n  \n  // 指令执行器\n  const { parseAndExecuteMessage } = useInstructionExecutor({\n    executeInstruction: executeInstruction || (() => ({ success: false, message: '指令执行器未配置' }))\n  });\n  \n  const { messages, input, handleInputChange, handleSubmit, status } = useChat({\n    api: '/api/chat',\n    onFinish: (message) => {\n      // 当AI响应完成时，尝试执行指令\n      if (executeInstruction) {\n        const result = parseAndExecuteMessage(message.content);\n        \n        if (result) {\n          const resultText = result.success \n            ? `✅ ${result.message}` \n            : `❌ ${result.message}`;\n            \n          setExecutionResults(prev => [...prev, resultText]);\n          \n          // 通知父组件\n          if (onInstructionExecuted) {\n            onInstructionExecuted({ \n              success: result.success, \n              message: result.message \n            });\n          }\n        }\n      }\n    }\n  });\n  \n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const isLoading = status === 'submitted' || status === 'streaming';\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, executionResults]);\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg h-full flex flex-col\">\n      {/* 头部 */}\n      <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n        <div>\n          <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white\">\n            🤖 AI 指令助手\n          </h2>\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n            我可以通过指令映射直接操作你的待办事项\n          </p>\n          <p className=\"text-xs text-gray-500 dark:text-gray-500 mt-1\">\n            支持：添加、完成、删除、列表、清除等操作\n          </p>\n        </div>\n      </div>\n\n      {/* 消息区域 */}\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n        {messages.length === 0 && (\n          <div className=\"text-center text-gray-500 dark:text-gray-400 mt-8\">\n            <p className=\"text-2xl mb-2\">🎯</p>\n            <p>你好！我是你的 AI 指令助手</p>\n            <p className=\"text-sm mt-1\">我可以直接执行待办事项操作</p>\n            <div className=\"mt-3 text-xs text-gray-400 dark:text-gray-500 space-y-1\">\n              <p>📝 &ldquo;添加学习 Python 任务&rdquo;</p>\n              <p>✅ &ldquo;完成学习任务&rdquo;</p>\n              <p>🗑️ &ldquo;删除买菜任务&rdquo;</p>\n              <p>📋 &ldquo;显示所有任务&rdquo;</p>\n            </div>\n          </div>\n        )}\n        \n        {messages.map((message) => (\n          <div\n            key={message.id}\n            className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}\n          >\n            <div\n              className={`max-w-[85%] px-3 py-2 rounded-lg text-sm ${\n                message.role === 'user'\n                  ? 'bg-blue-500 text-white'\n                  : 'bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-white'\n              }`}\n            >\n              <div className=\"whitespace-pre-wrap\">{message.content}</div>\n            </div>\n          </div>\n        ))}\n\n        {/* 显示执行结果 */}\n        {executionResults.map((result, index) => (\n          <div key={`result-${index}`} className=\"flex justify-center\">\n            <div className=\"bg-green-100 dark:bg-green-900/30 border border-green-300 dark:border-green-700 text-green-800 dark:text-green-300 px-3 py-2 rounded-lg text-sm max-w-[90%]\">\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-green-600\">⚡</span>\n                <span>指令执行结果：{result}</span>\n              </div>\n            </div>\n          </div>\n        ))}\n        \n        {isLoading && (\n          <div className=\"flex justify-start\">\n            <div className=\"bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-white px-3 py-2 rounded-lg text-sm\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"animate-spin rounded-full h-3 w-3 border-b-2 border-blue-500\"></div>\n                <span>正在分析指令并执行中...</span>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* 输入区域 */}\n      <div className=\"border-t border-gray-200 dark:border-gray-700 p-3\">\n        <form onSubmit={handleSubmit} className=\"flex gap-2\">\n          <input\n            value={input}\n            onChange={handleInputChange}\n            placeholder=\"输入指令，如：添加学习任务...\"\n            disabled={isLoading}\n            className=\"flex-1 px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white disabled:opacity-50\"\n          />\n          <button\n            type=\"submit\"\n            disabled={isLoading || !input.trim()}\n            className=\"px-3 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed text-sm\"\n          >\n            执行\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 510, "column": 0}, "map": {"version":3,"sources":["file:///Users/bytedance/Desktop/agent-example/examples/05-instruction-mapping/app/utils/instructionMapper.ts"],"sourcesContent":["// 定义指令类型\nexport interface Instruction {\n  action: 'add' | 'complete' | 'delete' | 'list' | 'clear_completed' | 'clear_all';\n  task?: string;\n  id?: number;\n  response?: string;\n}\n\n// 定义待办事项类型\nexport interface Todo {\n  id: number;\n  text: string;\n  completed: boolean;\n}\n\n// 定义执行结果类型\nexport interface ExecutionResult {\n  success: boolean;\n  message?: string;\n  data?: Todo[] | Todo | boolean;\n}\n\n// 定义函数映射表类型\nexport type TodoFunction = (params?: string | number | undefined) => ExecutionResult | Todo[] | boolean | void;\n\n// 指令映射器类\nexport class InstructionMapper {\n  private functionMap: Map<string, TodoFunction>;\n  \n  constructor() {\n    this.functionMap = new Map();\n  }\n\n  // 注册函数到映射表\n  registerFunction(action: string, func: TodoFunction) {\n    this.functionMap.set(action, func);\n  }\n\n  // 执行指令映射的函数\n  executeInstruction(instruction: Instruction): ExecutionResult {\n    const func = this.functionMap.get(instruction.action);\n    \n    if (!func) {\n      console.warn(`未找到操作 \"${instruction.action}\" 对应的函数`);\n      return { \n        success: false, \n        message: `不支持的操作: ${instruction.action}` \n      };\n    }\n\n    try {\n      // 根据不同的操作类型传递不同的参数\n      let result: ExecutionResult | Todo[] | boolean | void;\n      \n      switch (instruction.action) {\n        case 'add':\n          result = func(instruction.task);\n          break;\n        case 'complete':\n        case 'delete':\n          result = func(instruction.id || instruction.task);\n          break;\n        case 'list':\n        case 'clear_completed':\n        case 'clear_all':\n          result = func();\n          break;\n        default:\n          result = func();\n      }\n\n      // 标准化返回结果\n      if (typeof result === 'object' && result !== null && 'success' in result) {\n        return result as ExecutionResult;\n      } else {\n        return {\n          success: true,\n          message: `操作 \"${instruction.action}\" 执行成功`,\n          data: result as Todo[] | Todo | boolean\n        };\n      }\n    } catch (error) {\n      console.error('执行指令时发生错误:', error);\n      return { \n        success: false, \n        message: `执行操作 \"${instruction.action}\" 时发生错误` \n      };\n    }\n  }\n\n  // 获取所有注册的函数\n  getRegisteredActions(): string[] {\n    return Array.from(this.functionMap.keys());\n  }\n\n  // 检查是否支持某个操作\n  supportsAction(action: string): boolean {\n    return this.functionMap.has(action);\n  }\n}\n\n// 创建全局实例\nexport const instructionMapper = new InstructionMapper();\n\n// 辅助函数：根据任务名称查找todo项\nexport function findTodoByText(todos: Todo[], taskText: string): Todo | undefined {\n  return todos.find(todo => \n    todo.text.toLowerCase().includes(taskText.toLowerCase()) ||\n    taskText.toLowerCase().includes(todo.text.toLowerCase())\n  );\n}\n\n// 辅助函数：根据ID查找todo项\nexport function findTodoById(todos: Todo[], id: number): Todo | undefined {\n  return todos.find(todo => todo.id === id);\n} "],"names":[],"mappings":"AAAA,SAAS;;;;;;;AA0BF,MAAM;IACH,YAAuC;IAE/C,aAAc;QACZ,IAAI,CAAC,WAAW,GAAG,IAAI;IACzB;IAEA,WAAW;IACX,iBAAiB,MAAc,EAAE,IAAkB,EAAE;QACnD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ;IAC/B;IAEA,YAAY;IACZ,mBAAmB,WAAwB,EAAmB;QAC5D,MAAM,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,YAAY,MAAM;QAEpD,IAAI,CAAC,MAAM;YACT,QAAQ,IAAI,CAAC,CAAC,OAAO,EAAE,YAAY,MAAM,CAAC,OAAO,CAAC;YAClD,OAAO;gBACL,SAAS;gBACT,SAAS,CAAC,QAAQ,EAAE,YAAY,MAAM,EAAE;YAC1C;QACF;QAEA,IAAI;YACF,mBAAmB;YACnB,IAAI;YAEJ,OAAQ,YAAY,MAAM;gBACxB,KAAK;oBACH,SAAS,KAAK,YAAY,IAAI;oBAC9B;gBACF,KAAK;gBACL,KAAK;oBACH,SAAS,KAAK,YAAY,EAAE,IAAI,YAAY,IAAI;oBAChD;gBACF,KAAK;gBACL,KAAK;gBACL,KAAK;oBACH,SAAS;oBACT;gBACF;oBACE,SAAS;YACb;YAEA,UAAU;YACV,IAAI,OAAO,WAAW,YAAY,WAAW,QAAQ,aAAa,QAAQ;gBACxE,OAAO;YACT,OAAO;gBACL,OAAO;oBACL,SAAS;oBACT,SAAS,CAAC,IAAI,EAAE,YAAY,MAAM,CAAC,MAAM,CAAC;oBAC1C,MAAM;gBACR;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,cAAc;YAC5B,OAAO;gBACL,SAAS;gBACT,SAAS,CAAC,MAAM,EAAE,YAAY,MAAM,CAAC,OAAO,CAAC;YAC/C;QACF;IACF;IAEA,YAAY;IACZ,uBAAiC;QAC/B,OAAO,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI;IACzC;IAEA,aAAa;IACb,eAAe,MAAc,EAAW;QACtC,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;IAC9B;AACF;AAGO,MAAM,oBAAoB,IAAI;AAG9B,SAAS,eAAe,KAAa,EAAE,QAAgB;IAC5D,OAAO,MAAM,IAAI,CAAC,CAAA,OAChB,KAAK,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,SAAS,WAAW,OACrD,SAAS,WAAW,GAAG,QAAQ,CAAC,KAAK,IAAI,CAAC,WAAW;AAEzD;AAGO,SAAS,aAAa,KAAa,EAAE,EAAU;IACpD,OAAO,MAAM,IAAI,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK;AACxC","debugId":null}},
    {"offset": {"line": 598, "column": 0}, "map": {"version":3,"sources":["file:///Users/bytedance/Desktop/agent-example/examples/05-instruction-mapping/app/hooks/useInstructionMapping.ts"],"sourcesContent":["import { useCallback, useEffect } from 'react';\nimport { instructionMapper, Instruction, Todo, ExecutionResult, findTodoByText } from '../utils/instructionMapper';\n\ninterface UseInstructionMappingProps {\n  todos: Todo[];\n  setTodos: (todos: Todo[]) => void;\n}\n\nexport function useInstructionMapping({ todos, setTodos }: UseInstructionMappingProps) {\n  \n  // 添加待办事项函数\n  const addTodoFunction = useCallback((taskText?: string): ExecutionResult => {\n    if (!taskText || taskText.trim() === '') {\n      return {\n        success: false,\n        message: '任务内容不能为空'\n      };\n    }\n\n    const newTodo: Todo = {\n      id: Date.now(),\n      text: taskText.trim(),\n      completed: false,\n    };\n    \n    setTodos([...todos, newTodo]);\n    \n    return {\n      success: true,\n      message: `已添加任务: ${taskText}`,\n      data: newTodo\n    };\n  }, [todos, setTodos]);\n\n  // 完成待办事项函数\n  const completeTodoFunction = useCallback((taskIdentifier?: string | number): ExecutionResult => {\n    if (!taskIdentifier) {\n      return {\n        success: false,\n        message: '请指定要完成的任务'\n      };\n    }\n\n    let targetTodo: Todo | undefined;\n    \n    if (typeof taskIdentifier === 'number') {\n      targetTodo = todos.find(todo => todo.id === taskIdentifier);\n    } else {\n      targetTodo = findTodoByText(todos, taskIdentifier);\n    }\n\n    if (!targetTodo) {\n      return {\n        success: false,\n        message: `未找到任务: ${taskIdentifier}`\n      };\n    }\n\n    if (targetTodo.completed) {\n      return {\n        success: false,\n        message: `任务 \"${targetTodo.text}\" 已经完成了`\n      };\n    }\n\n    const updatedTodos = todos.map(todo =>\n      todo.id === targetTodo!.id ? { ...todo, completed: true } : todo\n    );\n    \n    setTodos(updatedTodos);\n    \n    return {\n      success: true,\n      message: `已完成任务: ${targetTodo.text}`,\n      data: { ...targetTodo, completed: true }\n    };\n  }, [todos, setTodos]);\n\n  // 删除待办事项函数\n  const deleteTodoFunction = useCallback((taskIdentifier?: string | number): ExecutionResult => {\n    if (!taskIdentifier) {\n      return {\n        success: false,\n        message: '请指定要删除的任务'\n      };\n    }\n\n    let targetTodo: Todo | undefined;\n    \n    if (typeof taskIdentifier === 'number') {\n      targetTodo = todos.find(todo => todo.id === taskIdentifier);\n    } else {\n      targetTodo = findTodoByText(todos, taskIdentifier);\n    }\n\n    if (!targetTodo) {\n      return {\n        success: false,\n        message: `未找到任务: ${taskIdentifier}`\n      };\n    }\n\n    const updatedTodos = todos.filter(todo => todo.id !== targetTodo!.id);\n    setTodos(updatedTodos);\n    \n    return {\n      success: true,\n      message: `已删除任务: ${targetTodo.text}`,\n      data: targetTodo\n    };\n  }, [todos, setTodos]);\n\n  // 列出所有待办事项函数\n  const listTodosFunction = useCallback((): ExecutionResult => {\n    const completedCount = todos.filter(todo => todo.completed).length;\n    const pendingCount = todos.length - completedCount;\n    \n    return {\n      success: true,\n      message: `共有 ${todos.length} 个任务，其中 ${completedCount} 个已完成，${pendingCount} 个待完成`,\n      data: todos\n    };\n  }, [todos]);\n\n  // 清除已完成任务函数\n  const clearCompletedFunction = useCallback((): ExecutionResult => {\n    const completedTodos = todos.filter(todo => todo.completed);\n    \n    if (completedTodos.length === 0) {\n      return {\n        success: false,\n        message: '没有已完成的任务需要清除'\n      };\n    }\n\n    const updatedTodos = todos.filter(todo => !todo.completed);\n    setTodos(updatedTodos);\n    \n    return {\n      success: true,\n      message: `已清除 ${completedTodos.length} 个已完成的任务`,\n      data: completedTodos\n    };\n  }, [todos, setTodos]);\n\n  // 清除所有任务函数\n  const clearAllFunction = useCallback((): ExecutionResult => {\n    if (todos.length === 0) {\n      return {\n        success: false,\n        message: '没有任务需要清除'\n      };\n    }\n\n    const clearedCount = todos.length;\n    setTodos([]);\n    \n    return {\n      success: true,\n      message: `已清除所有 ${clearedCount} 个任务`,\n      data: todos\n    };\n  }, [todos, setTodos]);\n\n  // 注册所有函数到映射器\n  useEffect(() => {\n    instructionMapper.registerFunction('add', addTodoFunction);\n    instructionMapper.registerFunction('complete', completeTodoFunction);\n    instructionMapper.registerFunction('delete', deleteTodoFunction);\n    instructionMapper.registerFunction('list', listTodosFunction);\n    instructionMapper.registerFunction('clear_completed', clearCompletedFunction);\n    instructionMapper.registerFunction('clear_all', clearAllFunction);\n  }, [\n    addTodoFunction,\n    completeTodoFunction,\n    deleteTodoFunction,\n    listTodosFunction,\n    clearCompletedFunction,\n    clearAllFunction\n  ]);\n\n  // 执行指令的主函数\n  const executeInstruction = useCallback((instruction: Instruction): ExecutionResult => {\n    console.log('执行指令:', instruction);\n    const result = instructionMapper.executeInstruction(instruction);\n    console.log('执行结果:', result);\n    return result;\n  }, []);\n\n  // 获取支持的操作列表\n  const getSupportedActions = useCallback((): string[] => {\n    return instructionMapper.getRegisteredActions();\n  }, []);\n\n  return {\n    executeInstruction,\n    getSupportedActions,\n    // 直接导出各个函数，以便组件可以直接调用\n    addTodo: addTodoFunction,\n    completeTodo: completeTodoFunction,\n    deleteTodo: deleteTodoFunction,\n    listTodos: listTodosFunction,\n    clearCompleted: clearCompletedFunction,\n    clearAll: clearAllFunction\n  };\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 840, "column": 0}, "map": {"version":3,"sources":["file:///Users/bytedance/Desktop/agent-example/examples/05-instruction-mapping/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport ChatSidebar from './components/ChatSidebar';\nimport { Todo } from './utils/instructionMapper';\nimport { useInstructionMapping } from './hooks/useInstructionMapping';\n\nexport default function TodoList() {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [inputValue, setInputValue] = useState('');\n\n  // 使用指令映射hook\n  const { \n    executeInstruction, \n    getSupportedActions,\n    addTodo: addTodoFunction,\n    clearCompleted: clearCompletedFunction,\n    clearAll: clearAllFunction\n  } = useInstructionMapping({ todos, setTodos });\n\n  // 本地添加任务（通过UI直接操作）\n  const addTodo = () => {\n    if (inputValue.trim() !== '') {\n      const result = addTodoFunction(inputValue.trim());\n      if (result.success) {\n        setInputValue('');\n      } else {\n        console.error('添加任务失败:', result.message);\n      }\n    }\n  };\n\n  // 本地删除任务（通过UI直接操作）\n  const deleteTodo = (id: number) => {\n    const result = executeInstruction({\n      action: 'delete',\n      id: id\n    });\n    if (!result.success) {\n      console.error('删除任务失败:', result.message);\n    }\n  };\n\n  // 本地切换任务状态（通过UI直接操作）\n  const toggleTodo = (id: number) => {\n    const todo = todos.find(t => t.id === id);\n    if (todo && !todo.completed) {\n      const result = executeInstruction({\n        action: 'complete',\n        id: id\n      });\n      if (!result.success) {\n        console.error('完成任务失败:', result.message);\n      }\n    } else if (todo && todo.completed) {\n      // 对于已完成的任务，我们可以取消完成状态\n      setTodos(todos.map(t =>\n        t.id === id ? { ...t, completed: false } : t\n      ));\n    }\n  };\n\n  // 通过映射系统清除已完成任务\n  const clearCompleted = () => {\n    const result = clearCompletedFunction();\n    if (!result.success) {\n      console.error('清除已完成任务失败:', result.message);\n    }\n  };\n\n  // 通过映射系统清除所有任务\n  const clearAll = () => {\n    const result = clearAllFunction();\n    if (!result.success) {\n      console.error('清除所有任务失败:', result.message);\n    }\n  };\n\n  const completedCount = todos.filter(todo => todo.completed).length;\n  const totalCount = todos.length;\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800 p-4\">\n      <div className=\"max-w-6xl mx-auto h-[calc(100vh-2rem)] flex flex-col lg:flex-row gap-6\">\n        {/* 左侧：待办事项 */}\n        <div className=\"flex-1 bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 overflow-y-auto\">\n          <div className=\"mb-4\">\n            <h1 className=\"text-3xl font-bold text-center text-gray-800 dark:text-white mb-2\">\n              📝 智能指令映射待办事项\n            </h1>\n            <p className=\"text-center text-sm text-gray-600 dark:text-gray-400\">\n              AI 指令将映射到本地函数执行 | 支持操作: {getSupportedActions().join(', ')}\n            </p>\n          </div>\n          \n          {/* 添加新任务 */}\n          <div className=\"flex gap-2 mb-6\">\n            <input\n              type=\"text\"\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && addTodo()}\n              placeholder=\"添加新任务...\"\n              className=\"flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n            />\n            <button\n              onClick={addTodo}\n              className=\"px-6 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition-colors duration-200 font-medium\"\n            >\n              添加\n            </button>\n          </div>\n\n          {/* 统计信息 */}\n          {totalCount > 0 && (\n            <div className=\"mb-4 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n              <p className=\"text-sm text-gray-600 dark:text-gray-300 text-center\">\n                总计: {totalCount} 任务 | 已完成: {completedCount} 任务 | \n                剩余: {totalCount - completedCount} 任务\n              </p>\n            </div>\n          )}\n\n          {/* 任务列表 */}\n          <div className=\"space-y-2\">\n            {todos.length === 0 ? (\n              <div className=\"text-center py-8\">\n                <p className=\"text-gray-500 dark:text-gray-400 text-lg\">\n                  暂无任务，添加一个新任务开始吧！\n                </p>\n                <p className=\"text-sm text-gray-400 dark:text-gray-500 mt-2\">\n                  💡 你可以直接在此添加，或向<span className=\"lg:inline hidden\">右侧</span><span className=\"lg:hidden inline\">下方</span>的 AI 助手发送指令\n                </p>\n                <p className=\"text-xs text-gray-400 dark:text-gray-500 mt-1\">\n                  例如：&ldquo;帮我添加一个学习任务&rdquo; 或 &ldquo;添加买菜任务&rdquo;\n                </p>\n              </div>\n            ) : (\n              todos.map((todo) => (\n                <div\n                  key={todo.id}\n                  className={`flex items-center gap-3 p-3 rounded-lg border transition-all duration-200 ${\n                    todo.completed\n                      ? 'bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800'\n                      : 'bg-white dark:bg-gray-700 border-gray-200 dark:border-gray-600 hover:shadow-md'\n                  }`}\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    onChange={() => toggleTodo(todo.id)}\n                    className=\"w-5 h-5 text-blue-600 rounded focus:ring-blue-500 focus:ring-2\"\n                  />\n                  <span\n                    className={`flex-1 ${\n                      todo.completed\n                        ? 'line-through text-gray-500 dark:text-gray-400'\n                        : 'text-gray-800 dark:text-white'\n                    }`}\n                  >\n                    {todo.text}\n                  </span>\n                  <span className=\"text-xs text-gray-400 dark:text-gray-500\">\n                    ID: {todo.id}\n                  </span>\n                  <button\n                    onClick={() => deleteTodo(todo.id)}\n                    className=\"px-3 py-1 text-red-600 hover:bg-red-100 dark:hover:bg-red-900/30 rounded transition-colors duration-200\"\n                    title=\"删除任务\"\n                  >\n                    🗑️\n                  </button>\n                </div>\n              ))\n            )}\n          </div>\n\n          {/* 快捷操作 */}\n          {todos.length > 0 && (\n            <div className=\"mt-6 flex gap-2 justify-center\">\n              <button\n                onClick={clearCompleted}\n                className=\"px-4 py-2 text-sm bg-red-100 hover:bg-red-200 text-red-700 rounded-lg transition-colors duration-200\"\n                disabled={completedCount === 0}\n              >\n                清除已完成 ({completedCount})\n              </button>\n              <button\n                onClick={clearAll}\n                className=\"px-4 py-2 text-sm bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-lg transition-colors duration-200\"\n              >\n                清除全部\n              </button>\n            </div>\n          )}\n        </div>\n\n        {/* 右侧：AI助手侧边栏 */}\n        <div className=\"w-full lg:w-80 h-96 lg:h-full\">\n          <ChatSidebar executeInstruction={executeInstruction} />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}